name: CI

on:
  push:
  pull_request:
    branches: [main]

jobs:
  lint:
    name: 'Lint'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm
      - name: Cache node_modules
        id: cache-node_modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install deps
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: yarn install
      - name: Lint
        run: yarn lint

  build:
    name: 'Build + Release'
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm
      - name: Cache node_modules
        id: cache-node_modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install deps
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: yarn install
      - name: TS build
        run: yarn build
      - name: Docker build
        run: docker build . -t node-http-rendezvous-server
      - name: Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: yarn release
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
